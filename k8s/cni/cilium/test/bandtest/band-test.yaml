apiVersion: apps/v1
kind: Deployment
metadata:
  name: band-t1
  namespace: ns1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: band-t1
  template:
    metadata:
      annotations:
#                ovn.kubernetes.io/logical_switch: subnet-gzu07a0k
        ovn.kubernetes.io/logical_switch: net1
#        kubernetes.io/egress-bandwidth: "20M"
      labels:
        app: band-t1
    spec:
#      nodeSelector:
#        kubernetes.io/hostname: pc1
      containers:
        - name: x-tools
          image: registry.cn-hangzhou.aliyuncs.com/ns-ykl/x-tools:v1
          command: ["/bin/sh", "-cs", "while true; do echo Hello from x-tools; sleep 10; done"]
          ports:
            - containerPort: 80
      nodeSelector:
        kubernetes.io/hostname: kf1

---
apiVersion: v1
kind: Service
metadata:
  name: band-t1-svc-1
spec:
  selector:
    app: band-t1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30080
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: band-t2
  namespace: ns1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: band-t2
  template:
    metadata:
      annotations:
#                ovn.kubernetes.io/logical_switch: subnet-gzu07a0k
        ovn.kubernetes.io/logical_switch: net1
#        kubernetes.io/egress-bandwidth: "10M"
      labels:
        app: band-t2
    spec:
#      nodeSelector:
#        kubernetes.io/hostname: pc1
      containers:
        - name: x-tools
          image: registry.cn-hangzhou.aliyuncs.com/ns-ykl/x-tools:v1
          command: ["/bin/sh", "-c", "while true; do echo Hello from x-tools; sleep 10; done"]
          ports:
            - containerPort: 80
      nodeSelector:
        kubernetes.io/hostname: kf2

---
apiVersion: v1
kind: Service
metadata:
  name: band-t2-svc-1
spec:
  selector:
    app: band-t2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30081
  type: NodePort
